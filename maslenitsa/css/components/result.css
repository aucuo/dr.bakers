.result {
  display: none;
  padding: 50px 0;
}
@media (max-width: 992px) {
  .result {
    padding: 30px 0;
  }
}
.result__wrapper {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
}
.result__logo {
  margin-bottom: 20px;
}
.result__button {
  border-radius: 10px;
  white-space: nowrap;
  transition: 0.3s;
  background: #FAFAFA;
  color: #000;
  border: 1px solid #E9E9E9;
  padding: 2.5px 10px;
  font-size: 16px;
  font-weight: 500;
  line-height: 19px;
  letter-spacing: -0.04em;
  margin-bottom: 40px;
}
@media (max-width: 768px) {
  .result__button {
    margin-bottom: 20px;
  }
}
.result__button--main {
  margin-bottom: 0;
}
.result__swiper {
  margin-bottom: 40px;
}
@media (max-width: 768px) {
  .result__swiper {
    margin-bottom: 30px;
  }
}
.result__swiper .swiper-slide {
  display: flex;
  justify-content: center;
  transform: scaleY(0.8);
  transition: transform 0.3s, opacity 0.3s;
  opacity: 0.8;
}
.result__swiper .swiper-slide-next,
.result__swiper .swiper-slide-prev {
  transform: scaleY(0.9);
  opacity: 0.9;
}
.result__swiper .swiper-slide-active {
  transform: scaleY(1);
  opacity: 1;
}
.result__image {
  border-radius: 20px;
}
.result__title {
  margin-bottom: 10px;
}
.result__text {
  font-size: 16px;
  font-weight: 400;
  line-height: 22px;
  letter-spacing: -0.03em;
  margin-bottom: 30px;
  text-align: center;
}
.result__socials {
  display: flex;
  margin-bottom: 30px;
}
.result__socials-link:not(:last-child) {
  margin-right: 10px;
}
.result__socials-image {
  width: 50px;
  height: 50px;
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImNvbXBvbmVudHMvcmVzdWx0LnNjc3MiLCJtaXhpbnMvX2JyZWFrcG9pbnQuc2NzcyIsIl92YXJpYWJsZXMuc2NzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFHQTtFQUNJO0VBQ0E7O0FDVUg7RURaRDtJQUtROzs7QUFHSjtFQUNJO0VBQ0E7RUFDQTtFQUNBOztBQUdKO0VBQ0k7O0FBR0o7RUFDSTtFQUNBO0VBQ0E7RUFDQTtFQUNBLE9FdEJBO0VGdUJBO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTtFQUNBOztBQ2JQO0VEQ0c7SUFlUTs7O0FBR0o7RUFDSTs7QUFJUjtFQUNJOztBQ3pCUDtFRHdCRztJQUlROzs7QUFHSjtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7O0FBR0o7QUFBQTtFQUVJO0VBQ0E7O0FBR0o7RUFDSTtFQUNBOztBQUlSO0VBQ0k7O0FBR0o7RUFDSTs7QUFHSjtFQUNJO0VBQ0E7RUFDQTtFQUNBO0VBQ0E7RUFDQTs7QUFHSjtFQUNJO0VBQ0E7O0FBR0k7RUFDSTs7QUFJUjtFQUNJO0VBQ0EiLCJmaWxlIjoiY29tcG9uZW50cy9yZXN1bHQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiQGltcG9ydCAnLi4vdmFyaWFibGVzJztcclxuQGltcG9ydCAnLi4vbWl4aW5zL2JyZWFrcG9pbnQnO1xyXG5cclxuLnJlc3VsdCB7XHJcbiAgICBkaXNwbGF5OiBub25lO1xyXG4gICAgcGFkZGluZzogNTBweCAwO1xyXG5cclxuICAgIEBpbmNsdWRlIG1kKCkge1xyXG4gICAgICAgIHBhZGRpbmc6IDMwcHggMDtcclxuICAgIH1cclxuXHJcbiAgICAmX193cmFwcGVyIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIGp1c3RpZnktY29udGVudDogY2VudGVyO1xyXG4gICAgICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICAgICAgZmxleC1kaXJlY3Rpb246IGNvbHVtbjtcclxuICAgIH1cclxuXHJcbiAgICAmX19sb2dvIHtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAyMHB4O1xyXG4gICAgfVxyXG5cclxuICAgICZfX2J1dHRvbiB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMTBweDtcclxuICAgICAgICB3aGl0ZS1zcGFjZTogbm93cmFwO1xyXG4gICAgICAgIHRyYW5zaXRpb246IC4zcztcclxuICAgICAgICBiYWNrZ3JvdW5kOiAjRkFGQUZBO1xyXG4gICAgICAgIGNvbG9yOiAkYmxhY2s7XHJcbiAgICAgICAgYm9yZGVyOiAxcHggc29saWQgI0U5RTlFOTtcclxuICAgICAgICBwYWRkaW5nOiAyLjVweCAxMHB4O1xyXG4gICAgICAgIGZvbnQtc2l6ZTogMTZweDtcclxuICAgICAgICBmb250LXdlaWdodDogNTAwO1xyXG4gICAgICAgIGxpbmUtaGVpZ2h0OiAxOXB4O1xyXG4gICAgICAgIGxldHRlci1zcGFjaW5nOiAtMC4wNGVtO1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIG1vYmlsZSgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMjBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtLW1haW4ge1xyXG4gICAgICAgICAgICBtYXJnaW4tYm90dG9tOiAwO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19zd2lwZXIge1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDQwcHg7XHJcblxyXG4gICAgICAgIEBpbmNsdWRlIG1vYmlsZSgpIHtcclxuICAgICAgICAgICAgbWFyZ2luLWJvdHRvbTogMzBweDtcclxuICAgICAgICB9XHJcblxyXG4gICAgICAgIC5zd2lwZXItc2xpZGUge1xyXG4gICAgICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgICAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVkoMC44KTtcclxuICAgICAgICAgICAgdHJhbnNpdGlvbjogdHJhbnNmb3JtIDAuM3MsIG9wYWNpdHkgMC4zcztcclxuICAgICAgICAgICAgb3BhY2l0eTogLjg7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLXNsaWRlLW5leHQsXHJcbiAgICAgICAgLnN3aXBlci1zbGlkZS1wcmV2IHtcclxuICAgICAgICAgICAgdHJhbnNmb3JtOiBzY2FsZVkoMC45KTtcclxuICAgICAgICAgICAgb3BhY2l0eTogLjk7XHJcbiAgICAgICAgfVxyXG5cclxuICAgICAgICAuc3dpcGVyLXNsaWRlLWFjdGl2ZSB7XHJcbiAgICAgICAgICAgIHRyYW5zZm9ybTogc2NhbGVZKDEpO1xyXG4gICAgICAgICAgICBvcGFjaXR5OiAxO1xyXG4gICAgICAgIH1cclxuICAgIH1cclxuXHJcbiAgICAmX19pbWFnZSB7XHJcbiAgICAgICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX190aXRsZSB7XHJcbiAgICAgICAgbWFyZ2luLWJvdHRvbTogMTBweDtcclxuICAgIH1cclxuXHJcbiAgICAmX190ZXh0IHtcclxuICAgICAgICBmb250LXNpemU6IDE2cHg7XHJcbiAgICAgICAgZm9udC13ZWlnaHQ6IDQwMDtcclxuICAgICAgICBsaW5lLWhlaWdodDogMjJweDtcclxuICAgICAgICBsZXR0ZXItc3BhY2luZzogLTAuMDNlbTtcclxuICAgICAgICBtYXJnaW4tYm90dG9tOiAzMHB4O1xyXG4gICAgICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIH1cclxuXHJcbiAgICAmX19zb2NpYWxzIHtcclxuICAgICAgICBkaXNwbGF5OiBmbGV4O1xyXG4gICAgICAgIG1hcmdpbi1ib3R0b206IDMwcHg7XHJcblxyXG4gICAgICAgICYtbGluayB7XHJcbiAgICAgICAgICAgICY6bm90KDpsYXN0LWNoaWxkKSB7XHJcbiAgICAgICAgICAgICAgICBtYXJnaW4tcmlnaHQ6IDEwcHg7XHJcbiAgICAgICAgICAgIH1cclxuICAgICAgICB9XHJcblxyXG4gICAgICAgICYtaW1hZ2Uge1xyXG4gICAgICAgICAgICB3aWR0aDogNTBweDtcclxuICAgICAgICAgICAgaGVpZ2h0OiA1MHB4O1xyXG4gICAgICAgIH1cclxuICAgIH1cclxufSIsIkBpbXBvcnQgJy4uL3ZhcmlhYmxlcyc7XG5cbkBtaXhpbiB0YWJsZXQge1xuXHRAbWVkaWEgKG1heC13aWR0aDogMTQ0MHB4KSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuQG1peGluIHNtLWRlc2sge1xuXHRAbWVkaWEgKG1heC13aWR0aDogMTQwMHB4KSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuQG1peGluIG1kIHtcblx0QG1lZGlhIChtYXgtd2lkdGg6IDk5MnB4KSB7XG5cdFx0QGNvbnRlbnQ7XG5cdH1cbn1cblxuQG1peGluIG1vYmlsZSB7XG5cdEBtZWRpYSAobWF4LXdpZHRoOiA3NjhweCkge1xuXHRcdEBjb250ZW50O1xuXHR9XG59IiwiLy8gRk9OVFNcclxuJGZvbnQtcHJpbWFyeTogXCJJbnRlclwiLCBzYW5zLXNlcmlmO1xyXG4kZHVyYXRpb24tbm9ybWFsOiAwLjJzO1xyXG5cclxuLy8gQ09MT1JTXHJcbiRibGFjazogIzAwMDtcclxuJGJsYWNrLWhvdmVyOiAjMjcyNzI3O1xyXG4kd2hpdGU6ICNmZmY7XHJcblxyXG4vLyBTQ1JFRU5TXHJcbiRzbTogNTc2cHg7XHJcbiRtZDogNzY4cHg7Il19 */
